<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><!-- Set your page title here, e.g. -->Grills & Accessories - Wilderness Essentials UK</title>
  <link rel="stylesheet" href="../style.css">
</head>
<body>
  <header class="site-header">
    <a id="homeLogoLink" href="../index.html">
      <img src="../logo.jpg" alt="Wilderness Essentials UK" class="logo-img" id="logo">
    </a>
    <div id="siteIntro">
      Wilderness Essentials UK
      <span>Your Definitive Guide to the UK's Hottest Selling Camping Gear.</span>
    </div>
    <nav class="megabar" aria-label="Main Navigation">
      <ul id="megabarMenu" class="megabar-menu"></ul>
    </nav>
  </header>

  <main id="mainContent">
    <div class="category-intro">
      <!-- Main Category Title (edit per page) -->
      <h1>Camp Kitchen</h1>
      <!-- Subcategory as subheading (edit per page, must match spreadsheet exactly after last '>') -->
      <h2 class="category-subhead">Grills & Accessories</h2>
      <p>
        <!-- Optional SEO/intro text, edit per subcategory page -->
        Discover our range of grills and accessories for perfect outdoor cooking, from compact BBQs to versatile grill tools. 
        Everything you need for an unforgettable campfire meal!
      </p>
    </div>
    <div id="productsGrid"></div>
  </main>

  <footer id="siteFooter">
    &copy; 2025 Wilderness Essentials UK &bull; All Rights Reserved.
  </footer>

  <script src="../script.js"></script>
  <script>
    // --- Card rendering function (duplicated for standalone use) ---
    function makeProductCard(p) {
      const card = document.createElement('div');
      card.className = 'product-card';
      if (p.image_url) {
        const img = document.createElement('img');
        img.className = 'product-image';
        img.src = p.image_url;
        img.alt = p.name;
        card.appendChild(img);
      }
      const details = document.createElement('div');
      details.className = 'product-details';
      const title = document.createElement('div');
      title.className = 'product-title';
      title.textContent = p.name;
      details.appendChild(title);
      const desc = document.createElement('div');
      desc.className = 'product-desc';
      desc.textContent = (p.description || "").split('\n')[0];
      details.appendChild(desc);
      if (p.amazon_link) {
        const btn = document.createElement('a');
        btn.className = 'product-link';
        btn.href = p.amazon_link;
        btn.target = "_blank";
        btn.rel = "noopener";
        btn.textContent = "More Details";
        details.appendChild(btn);
      }
      card.appendChild(details);
      return card;
    }

    // --- Find products matching the subcategory (last part after > in category) ---
    document.addEventListener('DOMContentLoaded', async function () {
      if (typeof fetchProductsFromSheet === 'function') {
        await fetchProductsFromSheet();
      }
      if (typeof buildWPStyleMegaMenu === 'function') {
        buildWPStyleMegaMenu();
      }

      // Get subheading from the page
      const subcatElem = document.querySelector('.category-subhead');
      if(!subcatElem) return;
      const wantedSubcat = subcatElem.textContent.trim().toLowerCase();

      // Filter products: match last part after '>' in category column (column G)
      const grid = document.getElementById('productsGrid');
      grid.innerHTML = '';
      let filtered = [];
      if (typeof allProducts !== "undefined" && allProducts.length) {
        filtered = allProducts.filter(p => {
          if (!p.category) return false;
          let parts = p.category.split('>');
          let last = parts[parts.length-1].trim().toLowerCase();
          return last === wantedSubcat;
        });
      }
      if (!filtered.length) {
        grid.innerHTML = `<div style="grid-column: 1 / -1; text-align: center; color: #888;">No products found for this category.</div>`;
      } else {
        filtered.forEach(p => {
          grid.appendChild(makeProductCard(p));
        });
      }
    });
  </script>
</body>
</html>
